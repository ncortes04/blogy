generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id          Int      @id @default(autoincrement())
  user_id     Int
  post_id     Int
  description String   @db.Text
  created_at  DateTime @default(now()) @db.DateTime(0)
  updated_at  DateTime @updatedAt @db.DateTime(0)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "comment_ibfk_1")
  post        post     @relation(fields: [post_id], references: [id], onDelete: Cascade, map: "comment_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(255)
  description  String?   @db.Text
  user_id      Int?
  created_at   DateTime  @default(now()) @db.DateTime(0)
  updated_at   DateTime  @updatedAt @db.DateTime(0)
  comment      comment[]
  user         user?     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "post_ibfk_1")
  category     String?   @db.VarChar(255)
  read_time    String?   @db.VarChar(255)
  brief        String?   @db.VarChar(255)
  featureImg   String?   @db.VarChar(255)
  bannerImg    String?   @db.VarChar(255)
  iconImg      String?   @db.VarChar(255)
  views        Int       @default(0) // New views attribute

  @@index([user_id], map: "user_id")
}



model user {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique(map: "email") @db.VarChar(255)
  password     String   @db.VarChar(255)
  img          String?  @default("/default-img.png") @db.VarChar(255)
  designation  String?  @default("N/A") @db.VarChar(255)
  bio          String?  @default("No bio available.") @db.VarChar(255)
  facebook     String?
  instagram    String?
  twitter      String?
  linkedin     String?
  comment      comment[]
  post         post[]
}
